import { defineComponent as se, onBeforeUnmount as Te, onMounted as ke, openBlock as u, createElementBlock as c, createElementVNode as i, withModifiers as Q, normalizeClass as d, toDisplayString as p, Fragment as q, createCommentVNode as y, ref as x, watch as U, createVNode as O, renderList as K, normalizeStyle as we, createTextVNode as Fe, withDirectives as E, vModelText as ie, vModelSelect as Le, vShow as Ve, createStaticVNode as Ue, useSlots as Ee, computed as Y, unref as z, vModelCheckbox as Ie, renderSlot as Ge } from "vue";
const Ke = { class: "bh-filter-menu bh-absolute bh-z-[1] bh-bg-white bh-shadow-md bh-rounded-md bh-top-full bh-right-0 bh-w-32 bh-mt-1" }, Je = ["onClick"], We = /* @__PURE__ */ se({
  __name: "column-filter",
  props: ["column", "columnFilterLang"],
  emits: ["close", "filterChange"],
  setup(w, { emit: C }) {
    const t = w;
    Te(() => {
      document.removeEventListener("click", l);
    }), ke(() => {
      document.addEventListener("click", l);
    });
    const l = () => {
      C("close");
    }, b = (S) => {
      t.column.condition = S, S === "" && (t.column.value = ""), C("filterChange", t.column);
    };
    return (S, o) => {
      var h, T, f, X, A, Z, $, L, I, B, N, j, R, J, P, ee, te, k, M;
      return u(), c("div", Ke, [
        i("div", {
          class: "bh-text-[13px] bh-font-normal bh-rounded bh-overflow-hidden",
          onClick: Q(l, ["stop"])
        }, [
          i("button", {
            type: "button",
            class: d({ active: t.column.condition === "" }),
            onClick: o[0] || (o[0] = (_) => b(""))
          }, p((h = t.columnFilterLang && t.columnFilterLang.no_filter) != null ? h : "No filter"), 3),
          t.column.type === "string" ? (u(), c(q, { key: 0 }, [
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "contain" }),
              onClick: o[1] || (o[1] = (_) => b("contain"))
            }, p((T = t.columnFilterLang && t.columnFilterLang.contain) != null ? T : "Contain"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "not_contain" }),
              onClick: o[2] || (o[2] = (_) => b("not_contain"))
            }, p((f = t.columnFilterLang && t.columnFilterLang.not_contain) != null ? f : "Not contain"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "equal" }),
              onClick: o[3] || (o[3] = (_) => b("equal"))
            }, p((X = t.columnFilterLang && t.columnFilterLang.equal) != null ? X : "Equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "not_equal" }),
              onClick: o[4] || (o[4] = (_) => b("not_equal"))
            }, p((A = t.columnFilterLang && t.columnFilterLang.not_equal) != null ? A : "Not equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "start_with" }),
              onClick: o[5] || (o[5] = (_) => b("start_with"))
            }, p((Z = t.columnFilterLang && t.columnFilterLang.start_with) != null ? Z : "Starts with"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "end_with" }),
              onClick: o[6] || (o[6] = (_) => b("end_with"))
            }, p(($ = t.columnFilterLang && t.columnFilterLang.end_with) != null ? $ : "Ends with"), 3)
          ], 64)) : t.column.type === "number" ? (u(), c(q, { key: 1 }, [
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "equal" }),
              onClick: o[7] || (o[7] = (_) => b("equal"))
            }, p((L = t.columnFilterLang && t.columnFilterLang.equal) != null ? L : "Equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "not_equal" }),
              onClick: o[8] || (o[8] = (_) => b("not_equal"))
            }, p((I = t.columnFilterLang && t.columnFilterLang.not_equal) != null ? I : "Not equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "greater_than" }),
              onClick: o[9] || (o[9] = (_) => b("greater_than"))
            }, p((B = t.columnFilterLang && t.columnFilterLang.greater_than) != null ? B : "Greater than"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "greater_than_equal" }),
              onClick: o[10] || (o[10] = (_) => b("greater_than_equal"))
            }, p((N = t.columnFilterLang && t.columnFilterLang.greater_than_equal) != null ? N : "Greater than or equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "less_than" }),
              onClick: o[11] || (o[11] = (_) => b("less_than"))
            }, p((j = t.columnFilterLang && t.columnFilterLang.less_than) != null ? j : "Less than"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "less_than_equal" }),
              onClick: o[12] || (o[12] = (_) => b("less_than_equal"))
            }, p((R = t.columnFilterLang && t.columnFilterLang.less_than_equal) != null ? R : "Less than or equal"), 3)
          ], 64)) : t.column.type === "date" ? (u(), c(q, { key: 2 }, [
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "equal" }),
              onClick: o[13] || (o[13] = (_) => b("equal"))
            }, p((J = t.columnFilterLang && t.columnFilterLang.equal) != null ? J : "Equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "not_equal" }),
              onClick: o[14] || (o[14] = (_) => b("not_equal"))
            }, p((P = t.columnFilterLang && t.columnFilterLang.not_equal) != null ? P : "Not equal"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "greater_than" }),
              onClick: o[15] || (o[15] = (_) => b("greater_than"))
            }, p((ee = t.columnFilterLang && t.columnFilterLang.greater_than) != null ? ee : "Greater than"), 3),
            i("button", {
              type: "button",
              class: d({ active: t.column.condition === "less_than" }),
              onClick: o[16] || (o[16] = (_) => b("less_than"))
            }, p((te = t.columnFilterLang && t.columnFilterLang.less_than) != null ? te : "Less than"), 3)
          ], 64)) : y("", !0),
          i("button", {
            type: "button",
            class: d({ active: t.column.condition === "is_null" }),
            onClick: o[17] || (o[17] = (_) => b("is_null"))
          }, p((k = t.columnFilterLang && t.columnFilterLang.is_null) != null ? k : "Is null"), 3),
          i("button", {
            type: "button",
            class: d({ active: t.column.condition === "is_not_null" }),
            onClick: o[18] || (o[18] = (_) => b("is_not_null"))
          }, p((M = t.columnFilterLang && t.columnFilterLang.is_not_null) != null ? M : "Not null"), 3)
        ], 8, Je)
      ]);
    };
  }
}), oe = (w, C) => {
  const t = w.__vccOpts || w;
  for (const [l, b] of C)
    t[l] = b;
  return t;
}, Ye = {}, Qe = {
  version: "1.1",
  viewBox: "0 0 17 12",
  xmlns: "http://www.w3.org/2000/svg"
}, Xe = /* @__PURE__ */ i("g", {
  fill: "none",
  "fill-rule": "evenodd"
}, [
  /* @__PURE__ */ i("g", {
    transform: "translate(-9 -11)",
    fill: "currentColor",
    "fill-rule": "nonzero"
  }, [
    /* @__PURE__ */ i("path", { d: "m25.576 11.414c0.56558 0.55188 0.56558 1.4439 0 1.9961l-9.404 9.176c-0.28213 0.27529-0.65247 0.41385-1.0228 0.41385-0.37034 0-0.74068-0.13855-1.0228-0.41385l-4.7019-4.588c-0.56584-0.55188-0.56584-1.4442 0-1.9961 0.56558-0.55214 1.4798-0.55214 2.0456 0l3.679 3.5899 8.3812-8.1779c0.56558-0.55214 1.4798-0.55214 2.0456 0z" })
  ])
], -1), Ze = [
  Xe
];
function je(w, C) {
  return u(), c("svg", Qe, Ze);
}
const Se = /* @__PURE__ */ oe(Ye, [["render", je]]), et = {}, tt = {
  viewBox: "0 0 24 24",
  width: "24",
  height: "24",
  stroke: "currentColor",
  "stroke-width": "3",
  fill: "none",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "css-i6dzq1"
}, lt = /* @__PURE__ */ i("line", {
  x1: "5",
  y1: "12",
  x2: "19",
  y2: "12"
}, null, -1), nt = [
  lt
];
function ot(w, C) {
  return u(), c("svg", tt, nt);
}
const at = /* @__PURE__ */ oe(et, [["render", ot]]), it = {}, st = {
  viewBox: "0 0 24 24",
  width: "24",
  height: "24",
  stroke: "currentColor",
  "stroke-width": "1.5",
  fill: "none",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "css-i6dzq1"
}, rt = /* @__PURE__ */ i("polygon", { points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" }, null, -1), ut = [
  rt
];
function ct(w, C) {
  return u(), c("svg", st, ut);
}
const ht = /* @__PURE__ */ oe(it, [["render", ct]]), dt = { key: "hdrrow" }, vt = { class: "bh-checkbox" }, ft = ["onClick"], gt = {
  width: "16",
  height: "16",
  viewBox: "0 0 14 14",
  fill: "none"
}, pt = {
  key: 0,
  class: "bh-filter bh-relative"
}, bt = ["onUpdate:modelValue"], mt = ["onUpdate:modelValue"], _t = ["onUpdate:modelValue"], yt = ["onUpdate:modelValue"], Ct = /* @__PURE__ */ i("option", { value: void 0 }, "All", -1), kt = /* @__PURE__ */ i("option", { value: !0 }, "True", -1), wt = /* @__PURE__ */ i("option", { value: !1 }, "False", -1), Ft = [
  Ct,
  kt,
  wt
], Lt = ["onClick"], Ce = /* @__PURE__ */ se({
  __name: "column-header",
  props: ["all", "currentSortColumn", "currentSortDirection", "isOpenFilter", "isFooter", "checkAll", "columnFilterLang"],
  emits: ["selectAll", "sortChange", "filterChange", "toggleFilterMenu"],
  setup(w, { emit: C }) {
    const t = w, l = x(null);
    return U(() => t.checkAll, () => {
      l.value && (l.value.indeterminate = t.checkAll !== 0 ? !t.checkAll : !1, l.value.checked = t.checkAll);
    }), (S, o) => (u(), c("tr", dt, [
      t.all.hasCheckbox ? (u(), c("th", {
        key: "chkall",
        class: d(["bh-w-px", {
          "bh-sticky bh-bg-blue-light bh-z-[1]": t.all.stickyHeader || t.all.stickyFirstColumn,
          "bh-top-0": t.all.stickyHeader,
          "bh-left-0": t.all.stickyFirstColumn
        }])
      }, [
        i("div", vt, [
          i("input", {
            ref_key: "selectedAll",
            ref: l,
            type: "checkbox",
            onClick: o[0] || (o[0] = Q((h) => C("selectAll", h.target.checked), ["stop"]))
          }, null, 512),
          i("div", null, [
            O(Se, { class: "check" }),
            O(at, { class: "intermediate" })
          ])
        ])
      ], 2)) : y("", !0),
      (u(!0), c(q, null, K(t.all.columns, (h, T) => (u(), c(q, null, [
        h.hide ? y("", !0) : (u(), c("th", {
          key: h.field,
          class: d(["bh-select-none bh-z-[1]", [
            t.all.sortable && h.sort ? "bh-cursor-pointer" : "",
            T === 0 && t.all.stickyFirstColumn ? "bh-sticky bh-left-0 bh-bg-blue-light" : "",
            t.all.hasCheckbox && T === 0 && t.all.stickyFirstColumn ? "bh-left-[52px]" : ""
          ]]),
          style: we({
            width: h.width,
            "min-width": h.minWidth,
            "max-width": h.maxWidth
          })
        }, [
          i("div", {
            class: d(["bh-flex bh-items-center", [h.headerClass ? h.headerClass : ""]]),
            onClick: (f) => t.all.sortable && h.sort && C("sortChange", h.field)
          }, [
            Fe(p(h.title) + " ", 1),
            t.all.sortable && h.sort ? (u(), c("span", {
              key: 0,
              class: d(["bh-ml-3 bh-sort bh-flex bh-items-center", [t.currentSortColumn, t.currentSortDirection]])
            }, [
              (u(), c("svg", gt, [
                i("polygon", {
                  points: "3.11,6.25 10.89,6.25 7,1.75 ",
                  fill: "currentColor",
                  class: d(["bh-text-black/20", [w.currentSortColumn === h.field && w.currentSortDirection === "asc" ? "!bh-text-primary" : ""]])
                }, null, 2),
                i("polygon", {
                  points: "7,12.25 10.89,7.75 3.11,7.75 ",
                  fill: "currentColor",
                  class: d(["bh-text-black/20", [w.currentSortColumn === h.field && w.currentSortDirection === "desc" ? "!bh-text-primary" : ""]])
                }, null, 2)
              ]))
            ], 2)) : y("", !0)
          ], 10, ft),
          t.all.columnFilter && !t.isFooter ? (u(), c(q, { key: 0 }, [
            h.filter ? (u(), c("div", pt, [
              h.type === "string" ? E((u(), c("input", {
                key: 0,
                "onUpdate:modelValue": (f) => h.value = f,
                type: "text",
                class: "bh-form-control",
                onKeyup: o[1] || (o[1] = (f) => C("filterChange"))
              }, null, 40, bt)), [
                [
                  ie,
                  h.value,
                  void 0,
                  { trim: !0 }
                ]
              ]) : y("", !0),
              h.type === "number" ? E((u(), c("input", {
                key: 1,
                "onUpdate:modelValue": (f) => h.value = f,
                type: "number",
                class: "bh-form-control",
                onKeyup: o[2] || (o[2] = (f) => C("filterChange"))
              }, null, 40, mt)), [
                [
                  ie,
                  h.value,
                  void 0,
                  {
                    number: !0,
                    trim: !0
                  }
                ]
              ]) : h.type === "date" ? E((u(), c("input", {
                key: 2,
                "onUpdate:modelValue": (f) => h.value = f,
                type: "date",
                class: "bh-form-control",
                onChange: o[3] || (o[3] = (f) => C("filterChange"))
              }, null, 40, _t)), [
                [ie, h.value]
              ]) : h.type === "bool" ? E((u(), c("select", {
                key: 3,
                "onUpdate:modelValue": (f) => h.value = f,
                class: "bh-form-control",
                onChange: o[4] || (o[4] = (f) => C("filterChange")),
                onClick: o[5] || (o[5] = (f) => t.isOpenFilter = null)
              }, Ft, 40, yt)), [
                [Le, h.value]
              ]) : y("", !0),
              h.type !== "bool" ? (u(), c("button", {
                key: 4,
                type: "button",
                onClick: Q((f) => C("toggleFilterMenu", h), ["stop"])
              }, [
                O(ht, { class: "bh-w-4" })
              ], 8, Lt)) : y("", !0),
              E(O(We, {
                column: h,
                type: h.type,
                columnFilterLang: t.columnFilterLang,
                onClose: o[6] || (o[6] = (f) => C("toggleFilterMenu", null)),
                onFilterChange: o[7] || (o[7] = (f) => C("filterChange"))
              }, null, 8, ["column", "type", "columnFilterLang"]), [
                [Ve, t.isOpenFilter === h.field]
              ])
            ])) : y("", !0)
          ], 64)) : y("", !0)
        ], 6))
      ], 64))), 256))
    ]));
  }
}), St = {}, $t = {
  width: "84",
  height: "84",
  viewBox: "0 0 24 24",
  class: "bh-loader bh-text-primary"
}, xt = /* @__PURE__ */ Ue('<circle cx="18" cy="12" r="0" fill="currentColor"><animate attributeName="r" begin=".67" calcMode="spline" dur="1.5s" keySplines="0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8" repeatCount="indefinite" values="0;2;0;0"></animate></circle><circle cx="12" cy="12" r="0" fill="currentColor"><animate attributeName="r" begin=".33" calcMode="spline" dur="1.5s" keySplines="0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8" repeatCount="indefinite" values="0;2;0;0"></animate></circle><circle cx="6" cy="12" r="0" fill="currentColor"><animate attributeName="r" begin="0" calcMode="spline" dur="1.5s" keySplines="0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8" repeatCount="indefinite" values="0;2;0;0"></animate></circle>', 3), qt = [
  xt
];
function Mt(w, C) {
  return u(), c("svg", $t, qt);
}
const zt = /* @__PURE__ */ oe(St, [["render", Mt]]), At = { class: "bh-datatable bh-antialiased bh-relative bh-text-black bh-text-sm bh-font-normal" }, Bt = ["onClick"], Nt = { class: "bh-checkbox" }, Rt = ["value"], Dt = ["innerHTML"], Pt = { key: 1 }, Ht = ["colspan"], Ot = ["colspan"], Tt = /* @__PURE__ */ i("div", { class: "bh-skeleton-box bh-h-8" }, null, -1), Vt = [
  Tt
], Ut = {
  key: 0,
  class: "bh-absolute bh-inset-0 bh-bg-blue-light/50 bh-grid bh-place-content-center"
}, Et = { class: "bh-flex bh-items-center bh-flex-wrap bh-flex-col sm:bh-flex-row bh-gap-4" }, It = { class: "bh-pagination-info bh-flex bh-items-center" }, Gt = { class: "bh-mr-2" }, Kt = ["value"], Jt = { class: "bh-pagination-number sm:bh-ml-auto bh-inline-flex bh-items-center bh-space-x-1" }, Wt = ["innerHTML"], Yt = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
}, Qt = /* @__PURE__ */ i("g", {
  fill: "currentColor",
  "fill-rule": "evenodd"
}, [
  /* @__PURE__ */ i("path", { d: "M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" }),
  /* @__PURE__ */ i("path", { d: "M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" })
], -1), Xt = [
  Qt
], Zt = ["innerHTML"], jt = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
}, el = /* @__PURE__ */ i("path", {
  fill: "currentColor",
  "fill-rule": "evenodd",
  d: "M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"
}, null, -1), tl = [
  el
], ll = ["onClick"], nl = ["innerHTML"], ol = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
}, al = /* @__PURE__ */ i("path", {
  fill: "currentColor",
  "fill-rule": "evenodd",
  d: "M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8L4.646 2.354a.5.5 0 0 1 0-.708z"
}, null, -1), il = [
  al
], sl = ["innerHTML"], rl = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
}, ul = /* @__PURE__ */ i("g", {
  fill: "currentColor",
  "fill-rule": "evenodd"
}, [
  /* @__PURE__ */ i("path", { d: "M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8L3.646 2.354a.5.5 0 0 1 0-.708z" }),
  /* @__PURE__ */ i("path", { d: "M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8L7.646 2.354a.5.5 0 0 1 0-.708z" })
], -1), cl = [
  ul
], gl = /* @__PURE__ */ se({
  __name: "custom-table",
  props: {
    loading: { type: Boolean, default: !1 },
    isServerMode: { type: Boolean, default: !1 },
    skin: { default: "bh-table-striped bh-table-hover" },
    totalRows: { default: 0 },
    rows: { default: () => [] },
    columns: { default: () => [] },
    hasCheckbox: { type: Boolean, default: !1 },
    search: { default: "" },
    columnChooser: { type: Boolean, default: !1 },
    page: { default: 1 },
    pageSize: { default: 10 },
    pageSizeOptions: { default: () => [10, 20, 30, 50, 100] },
    showPageSize: { type: Boolean, default: !0 },
    rowClass: { default: [] },
    cellClass: { default: [] },
    sortable: { type: Boolean, default: !1 },
    sortColumn: { default: "id" },
    sortDirection: { default: "asc" },
    columnFilter: { type: Boolean, default: !1 },
    columnFilterLang: { default: null },
    pagination: { type: Boolean, default: !0 },
    showNumbers: { type: Boolean, default: !0 },
    showNumbersCount: { default: 5 },
    showFirstPage: { type: Boolean, default: !0 },
    showLastPage: { type: Boolean, default: !0 },
    firstArrow: { default: "" },
    lastArrow: { default: "" },
    nextArrow: { default: "" },
    previousArrow: { default: "" },
    paginationInfo: { default: "Showing {0} to {1} of {2} entries" },
    noDataContent: { default: "No data available" },
    stickyHeader: { type: Boolean, default: !1 },
    height: { default: "500px" },
    stickyFirstColumn: { type: Boolean, default: !1 },
    cloneHeaderInFooter: { type: Boolean, default: !1 },
    selectRowOnClick: { type: Boolean, default: !1 }
  },
  emits: ["change", "sortChange", "searchChange", "pageChange", "pageSizeChange", "rowSelect", "filterChange", "rowClick", "rowDBClick"],
  setup(w, { expose: C, emit: t }) {
    var pe, be;
    const l = w, b = Ee();
    for (const e of l.columns || []) {
      const a = ((pe = e.type) == null ? void 0 : pe.toLowerCase()) || "string";
      e.type = a, e.isUnique = e.isUnique !== void 0 ? e.isUnique : !1, e.hide = e.hide !== void 0 ? e.hide : !1, e.filter = e.filter !== void 0 ? e.filter : !0, e.search = e.search !== void 0 ? e.search : !0, e.sort = e.sort !== void 0 ? e.sort : !0, e.html = e.html !== void 0 ? e.html : !1, e.condition = !a || a === "string" ? "contain" : "equal";
    }
    const S = x([]), o = x(l.page), h = x(l.pagination ? l.pageSize : (be = l.rows) == null ? void 0 : be.length), T = l.pageSize, f = x(l.sortColumn), X = l.sortColumn, A = x(l.sortDirection), Z = l.sortDirection, $ = x(l.totalRows), L = x([]), I = x(null), B = x(l.loading), N = x(l.search), j = JSON.parse(JSON.stringify(l.columns)), R = x(null), J = x(null);
    let P = x(0);
    const ee = x(230);
    ke(() => {
      H();
    }), C({
      reset() {
        Ne();
      },
      getSelectedRows() {
        return Re();
      },
      getColumnFilters() {
        return De();
      },
      clearSelectedRows() {
        return Pe();
      },
      selectRow(e) {
        fe(e);
      },
      unselectRow(e) {
        ge(e);
      },
      isRowSelected(e) {
        return ne(e);
      },
      getFilteredRows() {
        return ue();
      }
    });
    const te = (e, ...a) => e.replace(/{(\d+)}/g, (s, g) => typeof a[g] < "u" ? a[g] : s), k = Y(() => {
      const e = l.columns.find((a) => a.isUnique);
      return (e == null ? void 0 : e.field) || null;
    }), M = Y(() => {
      const e = h.value < 1 ? 1 : Math.ceil($.value / h.value);
      return Math.max(e || 0, 1);
    }), _ = Y(() => (o.value - 1) * h.value + 1), re = Y(() => {
      const e = o.value * h.value;
      return $.value >= e ? e : $.value;
    }), $e = Y(() => {
      let e, a;
      return typeof l.showNumbersCount < "u" && l.showNumbersCount < M.value ? (e = Math.max(o.value - Math.floor(l.showNumbersCount / 2), 1), a = e + l.showNumbersCount - 1, a > M.value && (a = M.value, e = a - l.showNumbersCount + 1)) : (e = 1, a = M.value), Array.from(Array(a + 1 - e).keys()).map((F) => e + F);
    }), ue = () => {
      var F, W, me;
      let e = l.rows || [];
      if (!l.isServerMode) {
        if ((F = l.columns) == null || F.forEach((n) => {
          n.filter && (n.value !== void 0 && n.value !== null && n.value !== "" || n.condition === "is_null" || n.condition == "is_not_null") && (n.type === "string" ? (n.value && !n.condition && (n.condition = "contain"), n.condition === "contain" ? e = e.filter((r) => {
            var m;
            return (m = v(r, n.field)) == null ? void 0 : m.toString().toLowerCase().includes(n.value.toLowerCase());
          }) : n.condition === "not_contain" ? e = e.filter((r) => {
            var m;
            return !((m = v(r, n.field)) != null && m.toString().toLowerCase().includes(n.value.toLowerCase()));
          }) : n.condition === "equal" ? e = e.filter((r) => {
            var m;
            return ((m = v(r, n.field)) == null ? void 0 : m.toString().toLowerCase()) === n.value.toLowerCase();
          }) : n.condition === "not_equal" ? e = e.filter((r) => {
            var m;
            return ((m = v(r, n.field)) == null ? void 0 : m.toString().toLowerCase()) !== n.value.toLowerCase();
          }) : n.condition == "start_with" ? e = e.filter((r) => {
            var m;
            return ((m = v(r, n.field)) == null ? void 0 : m.toString().toLowerCase().indexOf(n.value.toLowerCase())) === 0;
          }) : n.condition == "end_with" && (e = e.filter((r) => {
            var m;
            return ((m = v(r, n.field)) == null ? void 0 : m.toString().toLowerCase().substr(n.value.length * -1)) === n.value.toLowerCase();
          }))) : n.type === "number" ? (n.value && !n.condition && (n.condition = "equal"), n.condition === "equal" ? e = e.filter((r) => v(r, n.field) && parseFloat(v(r, n.field)) === parseFloat(n.value)) : n.condition === "not_equal" ? e = e.filter((r) => v(r, n.field) && parseFloat(v(r, n.field)) !== parseFloat(n.value)) : n.condition === "greater_than" ? e = e.filter((r) => v(r, n.field) && parseFloat(v(r, n.field)) > parseFloat(n.value)) : n.condition === "greater_than_equal" ? e = e.filter((r) => v(r, n.field) && parseFloat(v(r, n.field)) >= parseFloat(n.value)) : n.condition === "less_than" ? e = e.filter((r) => v(r, n.field) && parseFloat(v(r, n.field)) < parseFloat(n.value)) : n.condition === "less_than_equal" && (e = e.filter((r) => v(r, n.field) && parseFloat(v(r, n.field)) <= parseFloat(n.value)))) : n.type === "date" ? (n.value && !n.condition && (n.condition = "equal"), n.condition === "equal" ? e = e.filter((r) => v(r, n.field) && le(v(r, n.field)) === n.value) : n.condition === "not_equal" ? e = e.filter((r) => v(r, n.field) && le(v(r, n.field)) !== n.value) : n.condition === "greater_than" ? e = e.filter((r) => v(r, n.field) && le(v(r, n.field)) > n.value) : n.condition === "less_than" && (e = e.filter((r) => v(r, n.field) && le(v(r, n.field)) < n.value))) : n.type === "bool" && (e = e.filter((r) => v(r, n.field) === n.value)), n.condition === "is_null" ? (e = e.filter((r) => v(r, n.field) == null || v(r, n.field) == ""), n.value = "") : n.condition === "is_not_null" && (n.value = "", e = e.filter((r) => v(r, n.field))));
        }), N.value && (e == null ? void 0 : e.length)) {
          let n = [];
          const r = (l.columns || []).filter((m) => m.search && !m.hide).map((m) => m.field);
          for (var a = 0; a < (e == null ? void 0 : e.length); a++)
            for (var s = 0; s < r.length; s++)
              if ((W = v(e[a], r[s])) != null && W.toString().toLowerCase().includes(N.value.toLowerCase())) {
                n.push(e[a]);
                break;
              }
          e = n;
        }
        var g = new Intl.Collator(void 0, {
          numeric: ((me = l.columns.find((n) => n.field == f.value)) == null ? void 0 : me.type) === "number",
          sensitivity: "base"
        });
        const He = A.value === "desc" ? -1 : 1;
        e.sort((n, r) => {
          var _e, ye;
          const m = (_e = f.value) == null ? void 0 : _e.split(".").reduce((V, ae) => V == null ? void 0 : V[ae], n), Oe = (ye = f.value) == null ? void 0 : ye.split(".").reduce((V, ae) => V == null ? void 0 : V[ae], r);
          return g.compare(m, Oe) * He;
        });
      }
      return e;
    }, H = () => {
      let e = [], a = ue();
      l.isServerMode ? ($.value = l.totalRows || 0, e = a) : ($.value = (a == null ? void 0 : a.length) || 0, e = a.slice(_.value - 1, re.value)), S.value = e || [];
    };
    U(
      () => l.loading,
      () => {
        B.value = l.loading;
      }
    );
    const ce = (e) => {
      e ? R.value === e.field ? R.value = null : R.value = e.field : R.value = null;
    }, xe = () => {
      if (o.value == 1)
        return !1;
      o.value--;
    }, qe = (e) => {
      o.value = e;
    }, Me = () => {
      if (o.value >= M.value)
        return !1;
      o.value++;
    };
    U(() => o.value, () => {
      D(!1), l.isServerMode ? G("page") : (H(), t("pageChange", o.value));
    }), U(() => l.rows, () => {
      l.isServerMode || (o.value = 1), D(!1), H();
    }), U(() => h.value, () => {
      D(!1), l.isServerMode ? o.value === 1 ? G("pagesize", !0) : o.value = 1 : (o.value = 1, H(), t("pageSizeChange", h.value));
    });
    const he = (e) => {
      let a = "asc";
      e == f.value && A.value === "asc" && (a = "desc");
      let s = (o.value - 1) * h.value, g = h.value;
      f.value = e, A.value = a, D(!1), H(), l.isServerMode ? G("sort") : t("sortChange", { offset: s, limit: g, field: e, direction: a });
    }, de = (e) => {
      I.value = e.length && S.value.length && e.length === S.value.length;
      const a = S.value.filter((s, g) => L.value.includes(k.value ? s[k.value] : g));
      t("rowSelect", a);
    };
    U(() => L.value, de);
    const D = (e) => {
      e ? L.value = S.value.map((a, s) => k.value ? a[k.value] : s) : L.value = [];
    }, ve = () => {
      D(!1), l.isServerMode ? o.value === 1 ? G("filter", !0) : o.value = 1 : (o.value = 1, H(), t("filterChange", l.columns));
    }, ze = () => {
      D(!1), l.isServerMode ? o.value === 1 ? G("search", !0) : o.value = 1 : (o.value = 1, H(), t("searchChange", N.value));
    };
    U(
      () => l.search,
      () => {
        N.value = l.search, ze();
      }
    );
    const v = (e, a) => a == null ? void 0 : a.split(".").reduce((s, g) => s == null ? void 0 : s[g], e), le = (e) => {
      try {
        if (!e)
          return "";
        const a = new Date(e), s = a.getDate(), g = a.getMonth() + 1;
        return a.getFullYear() + "-" + (g > 9 ? g : "0" + g) + "-" + (s > 9 ? s : "0" + s);
      } catch {
      }
      return "";
    }, Ae = (e, a) => {
      P.value++, P.value === 1 ? J.value = setTimeout(() => {
        P.value = 0, l.selectRowOnClick && (ne(a) ? ge(a) : fe(a), de(L.value)), t("rowClick", e);
      }, ee.value) : P.value === 2 && (clearTimeout(J.value), P.value = 0, t("rowDBClick", e));
    }, G = (e, a = !1) => {
      if (l.isServerMode) {
        Be();
        const s = {
          current_page: a ? 1 : o.value,
          pagesize: h.value,
          offset: (o.value - 1) * h.value,
          sort_column: f.value,
          sort_direction: A.value,
          search: N.value,
          column_filters: l.columns,
          change_type: e
        };
        t("change", s);
      }
    }, Be = () => {
      for (let e = 0; e < l.columns.length; e++) {
        let a = l.columns[e];
        a.filter && (a.value !== void 0 && a.value !== null && a.value !== "" || a.condition === "is_null" || a.condition === "is_not_null") && (a.type === "string" && a.value && !a.condition && (a.condition = "contain"), a.type === "number" && a.value && !a.condition && (a.condition = "equal"), a.type === "date" && a.value && !a.condition && (a.condition = "equal"));
      }
    }, Ne = () => {
      D(!1);
      for (let e = 0; e < l.columns.length; e++)
        l.columns[e] = j[e];
      N.value = "", h.value = T, f.value = X, A.value = Z, l.isServerMode ? o.value === 1 ? G("reset", !0) : o.value = 1 : (o.value = 1, H());
    }, Re = () => S.value.filter((a, s) => L.value.includes(k.value ? a[k.value] : s)), De = () => l.columns, Pe = () => {
      L.value = [];
    }, fe = (e) => {
      if (!ne(e)) {
        const a = S.value.find((s, g) => g === e);
        L.value.push(k.value ? a[k.value] : e);
      }
    }, ge = (e) => {
      if (ne(e)) {
        const a = S.value.find((s, g) => g === e);
        L.value = L.value.filter((s) => s !== (k.value ? a[k.value] : e));
      }
    }, ne = (e) => {
      const a = S.value.find((s, g) => g === e);
      return a ? L.value.includes(k.value ? a[k.value] : e) : !1;
    };
    return (e, a) => (u(), c("div", At, [
      i("div", {
        class: d(["bh-table-responsive", { "bh-min-h-[300px]": B.value }]),
        style: we({ height: l.stickyHeader && l.height })
      }, [
        i("table", {
          class: d([l.skin])
        }, [
          i("thead", {
            class: d({ "bh-sticky bh-top-0 bh-z-10": l.stickyHeader })
          }, [
            O(Ce, {
              all: l,
              currentSortColumn: f.value,
              currentSortDirection: A.value,
              isOpenFilter: R.value,
              checkAll: I.value,
              columnFilterLang: l.columnFilterLang,
              onSelectAll: D,
              onSortChange: he,
              onFilterChange: ve,
              onToggleFilterMenu: ce
            }, null, 8, ["currentSortColumn", "currentSortDirection", "isOpenFilter", "checkAll", "columnFilterLang"])
          ], 2),
          i("tbody", null, [
            $.value ? (u(!0), c(q, { key: 0 }, K(S.value, (s, g) => (u(), c("tr", {
              key: s[z(k)] ? s[z(k)] : g,
              class: d([typeof l.rowClass == "function" ? w.rowClass(s) : l.rowClass, l.selectRowOnClick ? "bh-cursor-pointer" : ""]),
              onClick: Q((F) => Ae(s, g), ["prevent"])
            }, [
              l.hasCheckbox ? (u(), c("td", {
                key: 0,
                class: d({
                  "bh-sticky bh-left-0 bh-bg-blue-light": l.stickyFirstColumn
                })
              }, [
                i("div", Nt, [
                  E(i("input", {
                    "onUpdate:modelValue": a[0] || (a[0] = (F) => L.value = F),
                    type: "checkbox",
                    value: s[z(k)] ? s[z(k)] : g,
                    onClick: a[1] || (a[1] = Q(() => {
                    }, ["stop"]))
                  }, null, 8, Rt), [
                    [Ie, L.value]
                  ]),
                  i("div", null, [
                    O(Se, { class: "check" })
                  ])
                ])
              ], 2)) : y("", !0),
              (u(!0), c(q, null, K(l.columns, (F, W) => (u(), c(q, null, [
                F.hide ? y("", !0) : (u(), c("td", {
                  key: F.field,
                  class: d([
                    typeof l.cellClass == "function" ? w.cellClass(s) : l.cellClass,
                    W === 0 && l.stickyFirstColumn ? "bh-sticky bh-left-0 bh-bg-blue-light" : "",
                    l.hasCheckbox && W === 0 && l.stickyFirstColumn ? "bh-left-[52px]" : "",
                    F.cellClass ? F.cellClass : ""
                  ])
                }, [
                  z(b)[F.field] ? Ge(e.$slots, F.field, {
                    key: 0,
                    value: s
                  }) : F.cellRenderer ? (u(), c("div", {
                    key: 1,
                    innerHTML: F.cellRenderer(s)
                  }, null, 8, Dt)) : (u(), c(q, { key: 2 }, [
                    Fe(p(v(s, F.field)), 1)
                  ], 64))
                ], 2))
              ], 64))), 256))
            ], 10, Bt))), 128)) : y("", !0),
            !$.value && !B.value ? (u(), c("tr", Pt, [
              i("td", {
                colspan: l.columns.length + 1
              }, p(l.noDataContent), 9, Ht)
            ])) : y("", !0),
            !$.value && B.value ? (u(!0), c(q, { key: 2 }, K(l.pageSize, (s) => (u(), c("tr", {
              key: s,
              class: "!bh-bg-white bh-h-11 !bh-border-transparent"
            }, [
              i("td", {
                colspan: l.columns.length + 1,
                class: "!bh-p-0 !bh-border-transparent"
              }, Vt, 8, Ot)
            ]))), 128)) : y("", !0)
          ]),
          l.cloneHeaderInFooter ? (u(), c("tfoot", {
            key: 0,
            class: d({ "bh-sticky bh-bottom-0": l.stickyHeader })
          }, [
            O(Ce, {
              all: l,
              currentSortColumn: f.value,
              currentSortDirection: A.value,
              isOpenFilter: R.value,
              isFooter: !0,
              checkAll: I.value,
              onSelectAll: D,
              onSortChange: he,
              onFilterChange: ve,
              onToggleFilterMenu: ce
            }, null, 8, ["currentSortColumn", "currentSortDirection", "isOpenFilter", "checkAll"])
          ], 2)) : y("", !0)
        ], 2),
        $.value && B.value ? (u(), c("div", Ut, [
          O(zt)
        ])) : y("", !0)
      ], 6),
      l.pagination && $.value ? (u(), c("div", {
        key: 0,
        class: d(["bh-pagination bh-py-5", { "bh-pointer-events-none": B.value }])
      }, [
        i("div", Et, [
          i("div", It, [
            i("span", Gt, p(te(l.paginationInfo, $.value ? z(_) : 0, z(re), $.value)), 1),
            l.showPageSize ? E((u(), c("select", {
              key: 0,
              "onUpdate:modelValue": a[2] || (a[2] = (s) => h.value = s),
              class: "bh-pagesize"
            }, [
              (u(!0), c(q, null, K(l.pageSizeOptions, (s) => (u(), c("option", {
                value: s,
                key: s
              }, p(s), 9, Kt))), 128))
            ], 512)), [
              [Le, h.value]
            ]) : y("", !0)
          ]),
          i("div", Jt, [
            l.showFirstPage ? (u(), c("button", {
              key: 0,
              type: "button",
              class: d(["bh-page-item first-page", { disabled: o.value <= 1 }]),
              onClick: a[3] || (a[3] = (s) => o.value = 1)
            }, [
              l.firstArrow ? (u(), c("span", {
                key: 0,
                innerHTML: l.firstArrow
              }, null, 8, Wt)) : (u(), c("svg", Yt, Xt))
            ], 2)) : y("", !0),
            i("button", {
              type: "button",
              class: d(["bh-page-item previous-page", { disabled: o.value <= 1 }]),
              onClick: xe
            }, [
              l.previousArrow ? (u(), c("span", {
                key: 0,
                innerHTML: l.previousArrow
              }, null, 8, Zt)) : (u(), c("svg", jt, tl))
            ], 2),
            l.showNumbers ? (u(!0), c(q, { key: 1 }, K(z($e), (s) => (u(), c("button", {
              key: s,
              type: "button",
              class: d(["bh-page-item", {
                disabled: o.value === s,
                "bh-active": s === o.value
              }]),
              onClick: (g) => qe(s)
            }, p(s), 11, ll))), 128)) : y("", !0),
            i("button", {
              type: "button",
              class: d(["bh-page-item next-page", { disabled: o.value >= z(M) }]),
              onClick: Me
            }, [
              l.nextArrow ? (u(), c("span", {
                key: 0,
                innerHTML: l.nextArrow
              }, null, 8, nl)) : (u(), c("svg", ol, il))
            ], 2),
            l.showLastPage ? (u(), c("button", {
              key: 2,
              type: "button",
              class: d(["bh-page-item last-page", { disabled: o.value >= z(M) }]),
              onClick: a[4] || (a[4] = (s) => o.value = z(M))
            }, [
              l.lastArrow ? (u(), c("span", {
                key: 0,
                innerHTML: l.lastArrow
              }, null, 8, sl)) : (u(), c("svg", rl, cl))
            ], 2)) : y("", !0)
          ])
        ])
      ], 2)) : y("", !0)
    ]));
  }
});
export {
  gl as default
};
